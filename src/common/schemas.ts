// Generated by ts-to-zod
import { z } from "zod";

export const creatorSchema = z.object({
  name: z.string(),
  version: z.string(),
});

export const browserSchema = z.object({
  name: z.string(),
  version: z.string(),
});

export const pageTimingsSchema = z.object({
  onContentLoad: z.number().optional(),
  onLoad: z.number().optional(),
});

export const timingsSchema = z.object({
  blocked: z.number().optional(),
  dns: z.number().optional(),
  connect: z.number().optional(),
  send: z.number(),
  wait: z.number(),
  receive: z.number(),
  ssl: z.number().optional(),
});

export const requestMethodSchema = z.union([
  z.literal("GET"),
  z.literal("POST"),
  z.literal("PUT"),
  z.literal("DELETE"),
  z.literal("PATCH"),
  z.literal("OPTIONS"),
  z.literal("TRACE"),
  z.literal("HEAD"),
]);

export const cookieSchema = z.object({
  name: z.string(),
  value: z.string(),
  path: z.string().optional(),
  expires: z.string().optional().nullable(),
  httpOnly: z.boolean().optional(),
  secure: z.boolean().optional(),
});

export const headerSchema = z.object({
  name: z.string(),
  value: z.string(),
});

export const queryStringSchema = z.object({
  name: z.string(),
  value: z.string(),
});

export const responseContentSchema = z.object({
  size: z.number(),
  compression: z.number().optional(),
  mimeType: z.string(),
  text: z.string().optional(),
  encoding: z.string().optional(),
});

export const postDataParamsSchema = z.object({
  name: z.string(),
  value: z.string().optional(),
  fileName: z.string().optional(),
  contentType: z.string().optional(),
});

export const pageSchema = z.object({
  staredDateTime: z.string().optional(),
  id: z.string(),
  title: z.string(),
  pageTimings: pageTimingsSchema,
});

export const responseSchema = z.object({
  status: z.number(),
  statusText: z.string(),
  httpVersion: z.string(),
  cookies: z.array(cookieSchema),
  content: responseContentSchema,
  redirectURL: z.string(),
  headersSize: z.number(),
  bodySize: z.number(),
});

export const postDataSchema = z.object({
  mimeType: z.string(),
  params: z.array(postDataParamsSchema).optional(),
  text: z.string(),
});

export const requestSchema = z.object({
  method: requestMethodSchema,
  url: z.string(),
  httpVersion: z.string(),
  cookies: z.array(cookieSchema),
  headers: z.array(headerSchema),
  queryString: z.array(queryStringSchema),
  postData: postDataSchema.optional(),
  headersSize: z.number(),
  bodySize: z.number(),
});

export const entrySchema = z.object({
  pageref: z.string().optional(),
  startedDateTime: z.string(),
  time: z.number(),
  request: requestSchema,
  response: responseSchema,
  timings: timingsSchema,
  serverIPAddress: z.string().optional(),
  connection: z.string().optional(),
});

export const hARFileSchema = z.object({
  log: z.object({
    creator: creatorSchema.optional(),
    browser: browserSchema.optional(),
    pages: z.array(pageSchema).optional(),
    entries: z.array(entrySchema),
  }),
});
